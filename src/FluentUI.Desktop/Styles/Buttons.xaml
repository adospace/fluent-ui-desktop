<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fluentui.desktop="clr-namespace:FluentUI.Desktop">

    <Style x:Key="FluentUIDesktopButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="-2" RadiusX="3" RadiusY="3" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{StaticResource FillColorTextPrimary}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FluentUIDesktopButtonStyle" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FluentUIDesktopButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource FillColorControlDefault}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ElevationControlBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource FillColorTextPrimary}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Border.CornerRadius" Value="4"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorControlSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorControlTertiary}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StrokeColorControlStrokeDefault}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource FillColorTextSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorControlDisabled}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StrokeColorControlStrokeDefault}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource FillColorTextDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FluentUIDesktopPrimaryButtonStyle" TargetType="fluentui.desktop:PrimaryButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FluentUIDesktopButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource FillColorAccentDefault}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ElevationAccentControlBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource FillColorTextOnAccentPrimary}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Border.CornerRadius" Value="4"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorAccentSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorAccentTertiary}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StrokeColorControlStrokeDefault}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource FillColorTextOnAccentSecondary}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorAccentDisabled}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StrokeColorControlStrokeDefault}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource FillColorTextOnAccentDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FluentUIDesktopToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FluentUIDesktopButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource FillColorControlDefault}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ElevationControlBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource FillColorTextPrimary}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Border.CornerRadius" Value="4"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource FillColorAccentDefault}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ElevationAccentControlBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource FillColorTextOnAccentPrimary}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorControlSecondary}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorControlTertiary}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StrokeColorControlStrokeDefault}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource FillColorTextSecondary}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorControlDisabled}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StrokeColorControlStrokeDefault}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource FillColorTextDisabled}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorAccentSecondary}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorAccentTertiary}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StrokeColorControlStrokeDefault}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource FillColorTextOnAccentSecondary}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorAccentDisabled}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StrokeColorControlStrokeDefault}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource FillColorTextOnAccentDisabled}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FluentUIDesktopToggleSwitchStyle" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FluentUIDesktopButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource FillColorControlAltSecondary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource StrokeColorControlStrokeDefault}"/>
        <Setter Property="Foreground" Value="{StaticResource FillColorTextPrimary}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Canvas Width="40">
                            <Border x:Name="border" 
                                    Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    SnapsToDevicePixels="true" 
                                    CornerRadius="10" 
                                    Width="40" 
                                    Height="20"/>
                            <Ellipse x:Name="circle" 
                                     Height="12" 
                                     Width="12" 
                                     Margin="4" 
                                     Fill="{StaticResource FillColorTextSecondary}" />
                        </Canvas>
                        <TextBlock x:Name="contentPresenter" 
                                   Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                   Margin="8,0"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorAccentDefault}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource FillColorTextOnAccentPrimary}"/>
                            <Setter Property="Margin" TargetName="circle" Value="24,4,4,4"/>
                        </Trigger>                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorControlAltTertiary}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorAccentSecondary}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorControlAltQuarternary}"/>
                            <Setter Property="Width" TargetName="circle" Value="14"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorAccentTertiary}"/>
                            <Setter Property="Margin" TargetName="circle" Value="22,4,4,4"/>
                            <Setter Property="Width" TargetName="circle" Value="14"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StrokeColorControlStrongStrokeDisabled}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorControlAltDisabled}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource FillColorTextDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource FillColorTextDisabled}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FillColorAccentDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource FillColorTextDisabled}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fluentui.desktop="clr-namespace:FluentUI.Desktop">

    <Style x:Key="FluentUIDesktopComboBoxReadonlyToggleButton" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="1"
                            SnapsToDevicePixels="true">
                        <Border x:Name="Arrow" HorizontalAlignment="Right" Width="32">
                            <fluentui.desktop:FluentIcon Icon="ChevronDown" 
                                               VerticalAlignment="Center" 
                                               HorizontalAlignment="Center" />
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Neutral.Gray160}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FluentUIDesktopComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="1"
                            SnapsToDevicePixels="true">
                        <Border x:Name="Arrow" HorizontalAlignment="Right" Width="32">
                            <fluentui.desktop:FluentIcon Icon="ChevronDown" 
                                               VerticalAlignment="Center" 
                                               HorizontalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FluentUIDesktopComboBoxEditableTextBox" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
        <Setter Property="Foreground" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="FluentUIDesktopComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="32"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="32"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="PART_EditableTextBox" 
                BorderThickness="0"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                Margin="{TemplateBinding Padding}" 
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                Style="{StaticResource FluentUIDesktopComboBoxEditableTextBox}"/>
            <ToggleButton x:Name="tb" 
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}" 
                Grid.ColumnSpan="2" 
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                Style="{StaticResource FluentUIDesktopComboBoxToggleButton}"/>
            <Popup x:Name="PART_Popup" 
                AllowsTransparency="true" 
                Focusable="false" 
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=tb}"
                Grid.ColumnSpan="2" 
                Margin="1" 
                >
                <!--<Border Background="{StaticResource Neutral.White}" 
                                    Margin="10,0,10,10" 
                                    Effect="{StaticResource Depth8}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                    MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                    <ScrollViewer CanContentScroll="true">
                        <ItemsPresenter 
                                        KeyboardNavigation.DirectionalNavigation="Contained" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </Border>-->
                <Border Background="{TemplateBinding Background}" 
                        BorderThickness="1"
                        BorderBrush="{StaticResource StrokeColorSurfaceStrokeFlyout}"
                        Margin="10,0,10,10" 
                        CornerRadius="8"
                        Effect="{StaticResource Depth8}">
                    <ScrollViewer 
                        CanContentScroll="True" 
                        Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <ItemsPresenter 
                            KeyboardNavigation.DirectionalNavigation="Cycle" 
                            Margin="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="BorderBrush" Value="{StaticResource Neutral.Gray20}"/>
                <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="BorderBrush" TargetName="tb" Value="{StaticResource Communication.CommunicationPrimary}"/>
                <Setter Property="BorderThickness" TargetName="tb" Value="2"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="IsKeyboardFocusWithin" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="tb" Value="{StaticResource Neutral.Gray160}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="FluentUIDesktopComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="8,12"/>
        <Setter Property="Foreground" Value="{StaticResource FillColorTextSecondary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Neutral.Gray20}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FluentUIDesktopComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource FillColorTextPrimary}"/>
        <Setter Property="Background" Value="{StaticResource FillColorControlDefault}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ElevationControlBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="8,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="32"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Grid.ColumnSpan="2"
                            IsHitTestVisible="False"
                            />
                        <ContentPresenter 
                            x:Name="contentPresenter"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                            Content="{TemplateBinding SelectionBoxItem}" 
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            IsHitTestVisible="false" 
                            Margin="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <ToggleButton 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            Grid.ColumnSpan="2" 
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            Style="{StaticResource FluentUIDesktopComboBoxReadonlyToggleButton}"/>
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="true" 
                               Focusable="false" 
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=bd}"
                               Grid.ColumnSpan="2" 
                               Margin="1" 
                               >
                            <!--<Border Background="{StaticResource Neutral.White}" 
                                    Margin="10,0,10,10" 
                                    Effect="{StaticResource Depth8}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                    MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <ScrollViewer CanContentScroll="true">
                                    <ItemsPresenter 
                                        KeyboardNavigation.DirectionalNavigation="Contained" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>-->
                            <Border Background="{TemplateBinding Background}" 
                                BorderThickness="1"
                                BorderBrush="{StaticResource StrokeColorSurfaceStrokeFlyout}"
                                Margin="10,0,10,10" 
                                CornerRadius="8"
                                Effect="{StaticResource Depth8}">
                                <ScrollViewer 
                                    CanContentScroll="True" 
                                    Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <ItemsPresenter 
                                        KeyboardNavigation.DirectionalNavigation="Cycle" 
                                        Margin="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="{StaticResource StrokeColorControlStrokeDefault}"/>
                            <Setter Property="Background" Value="{StaticResource FillColorControlDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource FillColorTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <!--<Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource Communication.CommunicationPrimary}"/>
                            <Setter Property="BorderThickness" TargetName="bd" Value="2"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ItemContainerStyle" Value="{DynamicResource FluentUIDesktopComboBoxItemStyle}"/>-->
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template" Value="{StaticResource FluentUIDesktopComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>
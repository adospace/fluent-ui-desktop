<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fluentui.desktop="clr-namespace:FluentUI.Desktop">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Buttons.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Background" Value="{StaticResource StrokeColorDividerStrokeDefault}"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Margin" Value="0,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Width="1" 
                        SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FluentUIDesktopToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true">
                        <TextBlock Text="..." 
                                   Foreground="Red" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Neutral.Gray20}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Neutral.Gray20}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FluentUIDesktopToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true">
                        <TextBlock Text="..." 
                                   Foreground="Red"  
                                   Height="10"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Neutral.Gray20}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Neutral.Gray20}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FluentUIDesktopToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border SnapsToDevicePixels="True" 
                            Padding="{TemplateBinding Padding}" 
                            Background="Transparent">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush ViewboxUnits="Absolute" 
                                              ViewportUnits="Absolute" 
                                              Viewport="0,0,4,4" 
                                              Viewbox="0,0,8,8" 
                                              TileMode="Tile">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{DynamicResource Palette29}"
                                                             Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                            <GeometryDrawing Brush="{DynamicResource Palette29}" 
                                                             Geometry="M 4 4 L 4 6 L 6 6 L 6 4 z"/>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FluentUIDesktopToolBarStyle" TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <StackPanel x:Name="Grid" 
                                SnapsToDevicePixels="true" 
                                Orientation="Horizontal">
                        <Border x:Name="MainPanelBorder" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}">
                            <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                <Thumb x:Name="ToolBarThumb" 
                                       Margin="0,0,0,0"
                                       Padding="0" 
                                       Style="{StaticResource FluentUIDesktopToolBarThumbStyle}" 
                                       VerticalAlignment="Center"/>
                                <ContentPresenter 
                                    x:Name="ToolBarHeader" 
                                    ContentSource="Header" 
                                    HorizontalAlignment="Center"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="Center"/>
                                <ToolBarPanel 
                                    x:Name="PART_ToolBarPanel" 
                                    IsItemsHost="true" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                        </Border>
                        <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                            <ToggleButton x:Name="OverflowButton" 
                                          ClickMode="Press" 
                                          FocusVisualStyle="{x:Null}" 
                                          IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          IsEnabled="{TemplateBinding HasOverflowItems}" 
                                          Style="{StaticResource FluentUIDesktopToolBarHorizontalOverflowButtonStyle}"/>
                            <Popup x:Name="OverflowPopup" 
                                   AllowsTransparency="true" 
                                   Focusable="false" 
                                   IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom" 
                                   StaysOpen="false">
                                <Border 
                                    Background="{StaticResource BackgroundFillColorSolidBackgroundTertiary}" 
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource StrokeColorSurfaceStrokeFlyout}"
                                    Margin="10,0,10,10" 
                                    CornerRadius="8"
                                    Effect="{StaticResource Depth8}"
                                    >
                                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" 
                                                          KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                          FocusVisualStyle="{x:Null}" 
                                                          Focusable="true" 
                                                          Margin="2" 
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                          KeyboardNavigation.TabNavigation="Cycle" 
                                                          WrapWidth="200"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource FluentUIDesktopToolBarVerticalOverflowButtonStyle}"/>
                            <Setter Property="Padding" Value="2,0,2,0"/>
                            <Setter Property="Margin" TargetName="ToolBarHeader" Value="-2,4,-2,0"/>
                            <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="-2,0"/>
                            <Setter Property="Height" TargetName="ToolBarThumb" Value="5"/>
                            <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                            <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                            <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                            <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,10"/>
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource FluentUIDesktopButtonStyle}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="Border.CornerRadius" Value="4"/>
        <Setter Property="TextElement.FontSize" Value="12"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="1,0"/>
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource FluentUIDesktopToggleButtonStyle}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="Border.CornerRadius" Value="4"/>
        <Setter Property="TextElement.FontSize" Value="12"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="1,0"/>
    </Style>

    <Style x:Key="FluentUIDesktopToolBarTrayStyle" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="Transparent"/>
    </Style>

</ResourceDictionary>